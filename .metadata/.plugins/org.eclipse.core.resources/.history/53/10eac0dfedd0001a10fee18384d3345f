import java.awt.*;
import java.awt.print.*;
import java.awt.print.PrinterJob;

import javax.swing.JFrame;

import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

import javax.swing.JLabel;
import javax.swing.JButton;

import javax.swing.JTextArea;

import java.sql.*;
import java.util.Calendar;

import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSeparator;
import javax.swing.ImageIcon;
import javax.swing.JTextField;
import javax.swing.JComboBox;
import javax.swing.Box;
import javax.swing.border.BevelBorder;
import javax.swing.border.LineBorder;
import javax.swing.JTextPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.JScrollPane;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;
import java.awt.event.InputMethodListener;
import java.awt.event.InputMethodEvent;
import java.awt.event.ItemListener;
import java.awt.event.ItemEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.border.TitledBorder;
import javax.swing.UIManager;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EtchedBorder;

public class StockPage {

	public JFrame frame;
	JLayeredPane layeredPane;
	private JTextField textField_2;
	private JTextField textField_5;
	private JTextArea textArea,textArea_1,textArea_2,textArea_3 ; 
	JPanel panel_1;
	private JTextField txtIncludeAllTaxes;
	private JLabel Price,lblQuantity_1, invoice,date;
	private JComboBox comboBox,comboBox_1,quickshow;
	float totalprice;
	int totalquantity,numto=0,disc=0;
	private JSpinner spinner_1;
	
	
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					StockPage window = new StockPage();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	public void switchpanel(JPanel panel){
		layeredPane.removeAll();
		layeredPane.add(panel);
		layeredPane.repaint();
		layeredPane.revalidate();
	}
	
	public StockPage() {
		initialize();
	}

	private void initialize() {
		frame = new JFrame();
		frame.getContentPane().setBackground(new Color(128, 128, 128));
		frame.setTitle("Stock Control Panel");
		frame.setBounds(-5, 1, 1900, 740);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		layeredPane = new JLayeredPane();
		layeredPane.setBorder(new TitledBorder(new CompoundBorder(new BevelBorder(BevelBorder.RAISED, new Color(240, 240, 240), new Color(255, 255, 255), new Color(105, 105, 105), new Color(160, 160, 160)), new LineBorder(new Color(180, 180, 180), 5)), "HOME TECH DESIGN", TitledBorder.CENTER, TitledBorder.TOP, null, new Color(0, 255, 255)));
		layeredPane.setBounds(0, 94, 1370, 607);
		frame.getContentPane().add(layeredPane);
		layeredPane.setLayout(new CardLayout(0, 0));
		
		JPanel panel = new JPanel();
		layeredPane.add(panel, "name_84013684881100");
		panel.setLayout(null);
		
		JLabel lblQuickShow = new JLabel("Quick View");
		lblQuickShow.setForeground(new Color(128, 0, 0));
		lblQuickShow.setFont(new Font("Times New Roman", Font.PLAIN, 17));
		lblQuickShow.setBounds(75, 59, 95, 25);
		panel.add(lblQuickShow);
		
		quickshow = new JComboBox();
		quickshow.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (quickshow.getSelectedIndex()!=0) {	          
					
				}
			}
		});		quickshow.setBounds(238, 59, 164, 25);
		panel.add(quickshow);
		quickshow.addItem("Today");
		quickshow.addItem("Weekly");
		quickshow.addItem("Monthly");
		quickshow.addItem("Yearly");
		
		JLabel lblGrossSale = new JLabel("Gross Sale");
		lblGrossSale.setForeground(Color.RED);
		lblGrossSale.setFont(new Font("Tahoma", Font.BOLD, 13));
		lblGrossSale.setBounds(75, 113, 76, 25);
		panel.add(lblGrossSale);
		
		JLabel lblAmountReceived = new JLabel("Amount Received");
		lblAmountReceived.setForeground(new Color(0, 0, 255));
		lblAmountReceived.setFont(new Font("Tahoma", Font.BOLD, 13));
		lblAmountReceived.setBounds(172, 113, 123, 25);
		panel.add(lblAmountReceived);
		
		JLabel lblAmountDue = new JLabel("Amount Due");
		lblAmountDue.setForeground(new Color(128, 0, 128));
		lblAmountDue.setFont(new Font("Tahoma", Font.BOLD, 13));
		lblAmountDue.setBounds(316, 113, 103, 25);
		panel.add(lblAmountDue);
		
		JLabel lblRs = new JLabel("Rs.");
		lblRs.setBounds(75, 146, 21, 19);
		panel.add(lblRs);
		
		JLabel label_1 = new JLabel("Rs.");
		label_1.setBounds(180, 146, 21, 19);
		panel.add(label_1);
		
		JLabel label_2 = new JLabel("Rs.");
		label_2.setBounds(313, 146, 21, 19);
		panel.add(label_2);
		
		JLabel grosssale = new JLabel("100000");
		grosssale.setBounds(96, 146, 66, 16);
		panel.add(grosssale);
		
		JLabel amountreceived = new JLabel("100000");
		amountreceived.setBounds(204, 146, 85, 16);
		panel.add(amountreceived);
		
		JLabel amountdue = new JLabel("100000");
		amountdue.setBounds(336, 146, 85, 16);
		panel.add(amountdue);
		
		JSeparator separator_3 = new JSeparator();
		separator_3.setBounds(75, 99, 331, 4);
		panel.add(separator_3);
		
		Box horizontalBox_6 = Box.createHorizontalBox();
		horizontalBox_6.setBorder(new EtchedBorder(EtchedBorder.RAISED, null, null));
		horizontalBox_6.setBounds(27, 30, 419, 169);
		panel.add(horizontalBox_6);
		
		JPanel panel1 = new JPanel();
		layeredPane.add(panel1, "name_82436627474300");
		panel1.setLayout(null);
		
		JLabel lblPanel = new JLabel("Panel 11");
		lblPanel.setBounds(152, 49, 428, 54);
		panel1.add(lblPanel);
		
		JPanel panel2 = new JPanel();
		layeredPane.add(panel2, "name_82443075050800");
		panel2.setLayout(null);
		
		JLabel lblPanel_1 = new JLabel("Panel 2");
		lblPanel_1.setBounds(257, 121, 180, 36);
		panel2.add(lblPanel_1);
		
		JPanel panel3 = new JPanel();
		panel3.setBackground(new Color(255, 228, 181));
		layeredPane.add(panel3, "name_82447065160300");
		panel3.setLayout(null);
		
		
		JButton btnPrint = new JButton("(Sell / Print / Save) Bill ");
		btnPrint.setFont(new Font("Times New Roman", Font.BOLD, 11));
		btnPrint.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			int a=JOptionPane.showConfirmDialog(frame, "If you Want to Print or Save It to PDF. Press Ok Button, If Not Press NO");
				if(a==0){
					PrinterJob job=PrinterJob.getPrinterJob();
					job.setJobName("Print Data");
					
					job.setPrintable(new Printable(){
						public int print(Graphics pg,PageFormat pf,int pageNum){
								pf.setOrientation(PageFormat.LANDSCAPE);
							if(pageNum>0)
								return Printable.NO_SUCH_PAGE;
						
						
							java.awt.Graphics2D g2=(java.awt.Graphics2D)pg;
							g2.translate(pf.getImageableX(),pf.getImageableY());
							g2.scale(1.28,1.42);
							
							panel_1.paint(g2);
							
							return Printable.PAGE_EXISTS;
						}
						
					});
					
						boolean ok=job.printDialog();
						if(ok){
							try{
								job.print();
							}
							catch(PrinterException es){
								JOptionPane.showMessageDialog(panel3, "Connection Problem in Printer");
							}
							catch(Exception es){
								JOptionPane.showMessageDialog(panel3, "Something went Wrong....");
							}
						}
					}
				
				textArea=textArea_2;
				textArea_1=textArea_3;
				disc=(int) spinner_1.getValue();
				String dat=date.getText().toString();
				Connection con;
				PreparedStatement ps,ps1,ps2;
				try{
					Class.forName("com.mysql.jdbc.Driver");
					con=DriverManager.getConnection("jdbc:mysql://localhost:3307/test","root","root");
					String str="select * from saleitem";
					ps=con.prepareStatement(str);
					ResultSet rs=ps.executeQuery();
					while(rs.next()){
						try{
							String str2="update item set itemquantity=itemquantity-? where itemname=? and brandname=?";
							ps2=con.prepareStatement(str2);
							ps2.setInt(1, totalquantity);
							ps2.setString(2, rs.getString(1));
							ps2.setString(3, rs.getString(2));
							ps2.executeUpdate();
							
							String str1="insert into invoice values(invoiceid,?,?,?,?,?,?)";
							ps1=con.prepareStatement(str1);
							ps1.setString(1, textArea.toString());
							ps1.setString(2, textArea_1.toString());
							ps1.setInt(3, totalquantity);
							ps1.setInt(4, disc);
							ps1.setDouble(5, totalprice);
							ps1.setString(6, dat);
							ps1.executeUpdate();
						}
						catch(SQLException ed){
							JOptionPane.showMessageDialog(frame, "Item Quantity Is greater to our Stock\nPlease Check Stock First");
						}
					}
					String last="delete from saleitem";
					ps2=con.prepareStatement(last);
					ps2.executeUpdate();
					
					JOptionPane.showMessageDialog(frame, "Stock Updated...");
				con.close();
				}
				catch(Exception es){
					JOptionPane.showMessageDialog(frame, es.toString());
				}
				
			}
		});
		btnPrint.setBounds(586, 493, 166, 44);
		panel3.add(btnPrint);
		
		JSeparator separator_1 = new JSeparator();
		separator_1.setBounds(241, 64, 227, 7);
		panel3.add(separator_1);
		
		JSeparator separator_2 = new JSeparator();
		separator_2.setBounds(241, 71, 227, 7);
		panel3.add(separator_2);
		
		JLabel lblItemName = new JLabel("Item's Name            :");
		lblItemName.setFont(new Font("Times New Roman", Font.ITALIC, 18));
		lblItemName.setBounds(160, 261, 166, 34);
		panel3.add(lblItemName);
		
		JLabel lblTotal = new JLabel("Total Price                :");
		lblTotal.setFont(new Font("Times New Roman", Font.ITALIC, 18));
		lblTotal.setBounds(162, 427, 176, 34);
		panel3.add(lblTotal);
		
		JLabel lblBillPanel = new JLabel("Bill Panel");
		lblBillPanel.setFont(new Font("Times New Roman", Font.BOLD | Font.ITALIC, 45));
		lblBillPanel.setBounds(267, 11, 219, 60);
		panel3.add(lblBillPanel);
		
		JLabel lblItemCategory = new JLabel("Select Item's              :");
		lblItemCategory.setFont(new Font("Times New Roman", Font.ITALIC, 18));
		lblItemCategory.setBounds(92, 148, 176, 34);
		panel3.add(lblItemCategory);
		
		JLabel lblPrize = new JLabel("Prize / item               :");
		lblPrize.setFont(new Font("Times New Roman", Font.ITALIC, 18));
		lblPrize.setBounds(92, 193, 176, 34);
		panel3.add(lblPrize);
		
		JLabel lblDiscount = new JLabel("Discount                :");
		lblDiscount.setFont(new Font("Times New Roman", Font.ITALIC, 18));
		lblDiscount.setBounds(160, 334, 176, 34);
		panel3.add(lblDiscount);
		
		JLabel lblQuantity = new JLabel("Total Quantity           :");
		lblQuantity.setFont(new Font("Times New Roman", Font.ITALIC, 18));
		lblQuantity.setBounds(162, 389, 176, 34);
		panel3.add(lblQuantity);
		
		JButton btnCalculate = new JButton("Calculate");
		btnCalculate.setFont(new Font("Tahoma", Font.BOLD, 11));
		btnCalculate.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				textField_2.setText(" "+totalquantity);
				textField_5.setText(" "+totalprice);
			}
		});
		btnCalculate.setBounds(131, 493, 154, 44);
		panel3.add(btnCalculate);
		
		textField_2 = new JTextField();
		textField_2.setBounds(366, 389, 211, 34);
		panel3.add(textField_2);
		textField_2.setColumns(10);
		
		textField_5 = new JTextField();
		textField_5.setBounds(366, 429, 213, 34);
		panel3.add(textField_5);
		textField_5.setColumns(10);
		
		JButton btnPreviewReceipt = new JButton("Preview Receipt");
		btnPreviewReceipt.setFont(new Font("Tahoma", Font.BOLD, 11));
		btnPreviewReceipt.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
			textArea.setText(textArea_2.getText());
			textArea_1.setText(textArea_3.getText());
			Price.setText("Rs. "+totalprice);
			}
		});
		btnPreviewReceipt.setBounds(348, 493, 176, 44);
		panel3.add(btnPreviewReceipt);
		
		panel_1 = new JPanel();
		panel_1.setBorder(new LineBorder(new Color(0, 0, 0)));
		panel_1.setBackground(new Color(255, 255, 255));
		panel_1.setBounds(804, 0, 481, 580);
		panel3.add(panel_1);
		panel_1.setLayout(null);
		
		JLabel lblInvoice = new JLabel("INVOICE");
		lblInvoice.setFont(new Font("Castellar", Font.PLAIN, 30));
		lblInvoice.setBounds(302, 22, 156, 48);
		panel_1.add(lblInvoice);
		
		Box horizontalBox = Box.createHorizontalBox();
		horizontalBox.setBorder(new LineBorder(new Color(0, 0, 0), 2, true));
		horizontalBox.setBounds(291, 22, 166, 48);
		panel_1.add(horizontalBox);
		
		JLabel lblNewLabel_2 = new JLabel("SPORTS HUB");
		lblNewLabel_2.setFont(new Font("Times New Roman", Font.PLAIN, 25));
		lblNewLabel_2.setBounds(23, 31, 156, 32);
		panel_1.add(lblNewLabel_2);
		
		JTextPane txtpnAddress = new JTextPane();
		txtpnAddress.setFont(new Font("Tahoma", Font.PLAIN, 12));
		txtpnAddress.setText("Address ::-\r\nNaulakha,\r\nSadar bazar,\r\nAgra Cantt.\r\nAgra");
		txtpnAddress.setBounds(23, 63, 109, 81);
		panel_1.add(txtpnAddress);
		
		JLabel lblDate = new JLabel("Date       :");
		lblDate.setFont(new Font("Tahoma", Font.PLAIN, 12));
		lblDate.setBounds(291, 90, 64, 20);
		panel_1.add(lblDate);
		
		invoice = new JLabel("New label");
		invoice.setBounds(365, 121, 68, 14);
		panel_1.add(invoice);
		addinvoiceid();
		
		date = new JLabel("20/07/2020");
		date.setBounds(365, 93, 87, 16);
		panel_1.add(date);
		
		Calendar cal=Calendar.getInstance();
		int dat=cal.get(Calendar.DATE);
		int mon=cal.get(Calendar.MONTH);
		int yr=cal.get(Calendar.YEAR);
		date.setText(dat+"-"+mon+"-"+yr);
		
		JLabel Invoice_1 = new JLabel("Invoice #   :");
		Invoice_1.setBounds(291, 121, 68, 14);
		panel_1.add(Invoice_1);
		
		Box verticalBox = Box.createVerticalBox();
		verticalBox.setBorder(new LineBorder(new Color(0, 0, 0)));
		verticalBox.setBounds(33, 155, 420, 25);
		panel_1.add(verticalBox);
		
		JLabel lblAmount = new JLabel("AMOUNT");
		lblAmount.setFont(new Font("Tahoma", Font.PLAIN, 15));
		lblAmount.setBounds(345, 160, 75, 20);
		panel_1.add(lblAmount);
		
		JLabel lblDescription = new JLabel("Description");
		lblDescription.setFont(new Font("Tahoma", Font.PLAIN, 15));
		lblDescription.setBounds(117, 160, 87, 20);
		panel_1.add(lblDescription);
		
		JLabel lblTotal_1 = new JLabel("Total :");
		lblTotal_1.setFont(new Font("Tahoma", Font.PLAIN, 18));
		lblTotal_1.setBounds(248, 533, 64, 20);
		panel_1.add(lblTotal_1);
		
		textArea = new JTextArea();
		textArea.setFont(new Font("Times New Roman", Font.PLAIN, 16));
		textArea.setBounds(43, 186, 269, 333);
		panel_1.add(textArea);
		
		textArea_1 = new JTextArea();
		textArea_1.setFont(new Font("Times New Roman", Font.PLAIN, 16));
		textArea_1.setBounds(324, 186, 126, 333);
		panel_1.add(textArea_1);
		
		Price = new JLabel("    Price");
		Price.setFont(new Font("Times New Roman", Font.BOLD, 20));
		Price.setBounds(318, 530, 134, 23);
		panel_1.add(Price);
		
		Box horizontalBox_1 = Box.createHorizontalBox();
		horizontalBox_1.setBorder(new LineBorder(new Color(0, 0, 0), 2));
		horizontalBox_1.setBounds(313, 155, 140, 403);
		panel_1.add(horizontalBox_1);
		
		txtIncludeAllTaxes = new JTextField();
		txtIncludeAllTaxes.setText("Include All Taxes. Sports Hub @2020");
		txtIncludeAllTaxes.setBounds(5, 560, 470, 18);
		panel_1.add(txtIncludeAllTaxes);
		txtIncludeAllTaxes.setColumns(10);
		
		Box horizontalBox_2 = Box.createHorizontalBox();
		horizontalBox_2.setBounds(33, 155, 420, 372);
		panel_1.add(horizontalBox_2);
		horizontalBox_2.setBorder(new LineBorder(new Color(0, 0, 0), 2));
		
		comboBox = new JComboBox();
		comboBox.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(comboBox.getSelectedIndex()!=0){
					Connection con;
					PreparedStatement ps;
					try{
						Class.forName("com.mysql.jdbc.Driver");
						con=DriverManager.getConnection("jdbc:mysql://localhost:3307/test","root","root");
						String str="select * from item where itemname=? and brandname=?";
						ps=con.prepareStatement(str);
						ps.setString(1, comboBox.getSelectedItem().toString());
						ps.setString(2, comboBox_1.getSelectedItem().toString());
						ResultSet rs=ps.executeQuery();
						while(rs.next()){
							lblQuantity_1.setText("Quantity of this Item = "+rs.getInt(6));
						}
						con.close();
					}
					catch(Exception es){}
					
				}
			}
		});
		comboBox.setBounds(296, 148, 210, 34);
		panel3.add(comboBox);
		comboBox.addItem("Select One");
		
		comboBox_1 = new JComboBox();
		comboBox_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(comboBox_1.getSelectedIndex()!=0){
					comboBox.removeAllItems();
					comboBox.repaint();
					comboBox.addItem("Select One");
					additembrand(comboBox_1.getSelectedItem().toString());
				}
			}
		});
		comboBox_1.setBounds(295, 108, 212, 34);
		panel3.add(comboBox_1);
		comboBox_1.addItem("Select One");
		
		addcomboBox_1();
		
		JSpinner spinner = new JSpinner();
		spinner.setModel(new SpinnerNumberModel(new Integer(1), new Integer(1), null, new Integer(1)));
		spinner.setBounds(536, 148, 43, 34);
		panel3.add(spinner);
		
		JSpinner spinner_2 = new JSpinner();
		spinner_2.setModel(new SpinnerNumberModel(new Float(0), null, null, new Float(1)));
		spinner_2.setBounds(296, 193, 166, 29);
		panel3.add(spinner_2);
		
		JLabel lblX = new JLabel("X");
		lblX.setFont(new Font("Times New Roman", Font.BOLD, 20));
		lblX.setForeground(Color.DARK_GRAY);
		lblX.setBounds(516, 147, 19, 34);
		panel3.add(lblX);
		
		spinner_1 = new JSpinner();
		spinner_1.setBounds(338, 339, 115, 29);
		panel3.add(spinner_1);
		
		Box horizontalBox_3 = Box.createHorizontalBox();
		horizontalBox_3.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		horizontalBox_3.setBounds(131, 373, 487, 105);
		panel3.add(horizontalBox_3);
		
		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(338, 261, 148, 71);
		panel3.add(scrollPane);
		
		textArea_2 = new JTextArea();
		scrollPane.setViewportView(textArea_2);
		
		JScrollPane scrollPane_1 = new JScrollPane();
		scrollPane_1.setBounds(487, 261, 95, 71);
		panel3.add(scrollPane_1);
		
		textArea_3 = new JTextArea();
		scrollPane_1.setViewportView(textArea_3);
		
		Box horizontalBox_4 = Box.createHorizontalBox();
		horizontalBox_4.setEnabled(false);
		horizontalBox_4.setBorder(new BevelBorder(BevelBorder.LOWERED, null, null, null, null));
		horizontalBox_4.setBounds(131, 255, 487, 120);
		panel3.add(horizontalBox_4);
		
		JLabel lblNewLabel_4 = new JLabel("Select Brand              :");
		lblNewLabel_4.setFont(new Font("Times New Roman", Font.ITALIC, 18));
		lblNewLabel_4.setBounds(92, 108, 176, 29);
		panel3.add(lblNewLabel_4);
		
		JLabel lblNoOfItems = new JLabel("(No. Of Item's)");
		lblNoOfItems.setBounds(589, 160, 95, 14);
		panel3.add(lblNoOfItems);
		
		int dbqun;
		JButton btnAdd = new JButton("ADD");
		btnAdd.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				Connection con;
				PreparedStatement ps,ps1,ps2;
				String brand=comboBox_1.getSelectedItem().toString();
				String item=comboBox.getSelectedItem().toString();
				float price=(float)spinner_2.getValue();
				int num=(int)spinner.getValue();
				
				try{
					Class.forName("com.mysql.jdbc.Driver");
					con=DriverManager.getConnection("jdbc:mysql://localhost:3307/test","root","root");
					String str="select * from item where itemname=? and brandname=?";
					ps=con.prepareStatement(str);
					ps.setString(1, item);
					ps.setString(2, brand);
					ResultSet rs=ps.executeQuery();
					if(rs.next()){
						totalprice+=price*num;
						totalquantity+=num;
						String rst=textArea_2.getText();
						String pr=textArea_3.getText();
						textArea_2.setText(item+" * "+num+"\n"+rst);
						textArea_3.setText(num*price+"\n"+pr);
						comboBox.removeItem(item);
						
						String str1="select * from saleitem where itemname=? and brandname=?";
						ps2=con.prepareStatement(str1);
						ps2.setString(1, item);
						ps2.setString(2, brand);
						ResultSet rs1=ps2.executeQuery();
						if(rs1.next()){
							String sr="update saleitem set qun=qun+? where itemname=? and brandname=?";
							ps1=con.prepareStatement(sr);
							ps1.setInt(1,num);
							ps1.setString(2, item);
							ps1.setString(3, brand);
							ps1.executeUpdate();
						}
						else{
							String sr="insert into saleitem values(?,?,?)";
							ps1=con.prepareStatement(sr);
							ps1.setString(1, item);
							ps1.setString(2, brand);
							ps1.setInt(3, num);
							ps1.executeUpdate();
						}
					}
					con.close();
				}
				catch(Exception es){
					JOptionPane.showMessageDialog(frame, es.toString()+" add");
				}
			}
		});
		btnAdd.setBounds(526, 196, 89, 31);
		panel3.add(btnAdd);
		
		lblQuantity_1 = new JLabel("");
		lblQuantity_1.setFont(new Font("Times New Roman", Font.PLAIN, 11));
		lblQuantity_1.setBounds(517, 112, 167, 21);
		panel3.add(lblQuantity_1);
		
		Box horizontalBox_5 = Box.createHorizontalBox();
		horizontalBox_5.setBorder(new LineBorder(new Color(0, 0, 0)));
		horizontalBox_5.setBounds(58, 94, 636, 145);
		panel3.add(horizontalBox_5);
		
		JButton btnReset = new JButton("RESET");
		btnReset.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				totalprice=0;
				totalquantity=0;
				textArea_2.setText("");
				textField_2.setText("");
				textField_5.setText("");
				textArea_1.setText("");
				textArea_3.setText("");
				textArea.setText("");
				Price.setText("");
				comboBox.removeAllItems();
				comboBox.addItem("Select One");
			}
		});
		btnReset.setFont(new Font("Tahoma", Font.BOLD, 15));
		btnReset.setBounds(628, 429, 166, 30);
		panel3.add(btnReset);
		
		JPanel panel4 = new JPanel();
		layeredPane.add(panel4, "name_28531958925900");
		
		
		JMenuBar menuBar = new JMenuBar();
		menuBar.setMargin(new Insets(4, 0, 0, 0));
		menuBar.setBounds(0, 0, 1370, 31);
		frame.getContentPane().add(menuBar);
		
		JMenu mnItemCategory = new JMenu("Item Brand");
		menuBar.add(mnItemCategory);
		
		JMenuItem mntmAddNewCategory = new JMenuItem("Add New Brand");
		mntmAddNewCategory.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				itemcategorypage window = new itemcategorypage("add");
				window.frame.setVisible(true);
				
			}
		});
		mnItemCategory.add(mntmAddNewCategory);
		
		JMenuItem mntmDeleteCategory = new JMenuItem("Delete Brand");
		mntmDeleteCategory.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				itemcategorypage window = new itemcategorypage("delete");
				window.frame.setVisible(true);
			}
		});
		mnItemCategory.add(mntmDeleteCategory);
		
		JMenu mnItem = new JMenu("Item");
		menuBar.add(mnItem);
		
		JMenuItem mntmAddNewItem = new JMenuItem("Add new Item");
		mntmAddNewItem.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				itempage window = new itempage("add");
				window.frame.setVisible(true);
			}
		});
		mnItem.add(mntmAddNewItem);
		
		JMenuItem mntmUpdateItem = new JMenuItem("Update Item");
		mntmUpdateItem.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				itempage window = new itempage("update");
				window.frame.setVisible(true);
			}
		});
		mnItem.add(mntmUpdateItem);
		
		JMenuItem mntmDeleteItem = new JMenuItem("Delete Item");
		mntmDeleteItem.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				itempage window = new itempage("delete");
				window.frame.setVisible(true);
			}
		});
		mnItem.add(mntmDeleteItem);
		
		JMenu mnSupplier = new JMenu("Supplier");
		menuBar.add(mnSupplier);
		
		JMenuItem mntmAdd = new JMenuItem("Add");
		mntmAdd.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				supplierpage window = new supplierpage("add");
				window.frame.setVisible(true);
			}
		});
		mnSupplier.add(mntmAdd);
		
		JMenuItem mntmUpdate = new JMenuItem("Update");
		mntmUpdate.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				supplierpage window = new supplierpage("update");
				window.frame.setVisible(true);
			}
		});
		mnSupplier.add(mntmUpdate);
		
		JMenuItem mntmDelete = new JMenuItem("Delete");
		mntmDelete.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				supplierpage window = new supplierpage("delete");
				window.frame.setVisible(true);
			}
		});
		mnSupplier.add(mntmDelete);
		
		JMenu mnContact = new JMenu("Contact");
		mnSupplier.add(mnContact);
		
		JMenuItem mntmViaEmail = new JMenuItem("Via Email");
		mnContact.add(mntmViaEmail);
		
		JMenuItem mntmViaMessage = new JMenuItem("Via Message");
		mnContact.add(mntmViaMessage);
		
		JMenu mnCustomer = new JMenu("Customer");
		mnCustomer.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				customerpage window = new customerpage("add");
				window.frame.setVisible(true);
			}
		});
		menuBar.add(mnCustomer);
		
		JMenuItem mntmAdd_1 = new JMenuItem("Add");
		mntmAdd_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				customerpage window = new customerpage("add");
				window.frame.setVisible(true);
			}
		});
		mnCustomer.add(mntmAdd_1);
		
		JMenuItem mntmUpdate_1 = new JMenuItem("Update");
		mntmUpdate_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				customerpage window = new customerpage("update");
				window.frame.setVisible(true);
			}
		});
		mnCustomer.add(mntmUpdate_1);
		
		JMenuItem mntmDelete_1 = new JMenuItem("Delete");
		mntmDelete_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				customerpage window = new customerpage("delete");
				window.frame.setVisible(true);
			}
		});
		mnCustomer.add(mntmDelete_1);
		
		JMenu mnContact_1 = new JMenu("Contact");
		mnCustomer.add(mnContact_1);
		
		JMenuItem mntmViaEmail_1 = new JMenuItem("Via Email");
		mnContact_1.add(mntmViaEmail_1);
		
		JMenuItem mntmViaMessage_1 = new JMenuItem("Via Message");
		mnContact_1.add(mntmViaMessage_1);
		
		JMenu mnFeatures = new JMenu("Features");
		menuBar.add(mnFeatures);
		
		JMenuItem mntmGenerateReport = new JMenuItem("Generate Report");
		mntmGenerateReport.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				switchpanel(panel1);
			}
		});
		mnFeatures.add(mntmGenerateReport);
		
		JMenuItem mntmCheckStock = new JMenuItem("Check Stock");
		mntmCheckStock.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				switchpanel(panel2);
			}
		});
		mnFeatures.add(mntmCheckStock);
		
		JMenuItem mntmCheckBills = new JMenuItem("Check Bills");
		mnFeatures.add(mntmCheckBills);
		
		JMenu mnGenerateBill = new JMenu("Invoice");
		menuBar.add(mnGenerateBill);
		
		JMenuItem mntmGenerateBillReceipt = new JMenuItem("Generate Bill Receipt");
		mntmGenerateBillReceipt.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				switchpanel(panel3);
			}
		});
		mnGenerateBill.add(mntmGenerateBillReceipt);
		
		JMenu mnSetting = new JMenu("Setting");
		menuBar.add(mnSetting);
		
		JMenuItem mntmChangePassword = new JMenuItem("Change Password");
		mntmChangePassword.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				switchpanel(panel4);
			}
		});
		mnSetting.add(mntmChangePassword);
		
		
		JLabel lblNewLabel = new JLabel("Welcome to SPORTS HUB");
		lblNewLabel.setForeground(new Color(0, 0, 139));
		lblNewLabel.setFont(new Font("Times New Roman", Font.PLAIN, 30));
		lblNewLabel.setBounds(110, 42, 353, 41);
		frame.getContentPane().add(lblNewLabel);
		
		JSeparator separator = new JSeparator();
		separator.setForeground(new Color(210, 105, 30));
		separator.setBounds(110, 88, 342, 2);
		frame.getContentPane().add(separator);
		
		JButton btnLogOut = new JButton("Log Out");
		btnLogOut.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				LoginPage window = new LoginPage();
				window.frmLoginPage.setVisible(true);
				frame.hide();
			}
		});
		btnLogOut.setFont(new Font("Times New Roman", Font.BOLD, 15));
		btnLogOut.setBounds(1236, 33, 124, 31);
		frame.getContentPane().add(btnLogOut);
		
		JLabel lblNewLabel_1 = new JLabel("New label");
		lblNewLabel_1.setIcon(new ImageIcon("H:\\WONE\\BillingSystem\\stock-management-words-next-to-boxes-inventory-white-background-31736981.jpg"));
		lblNewLabel_1.setBounds(0, 33, 100, 63);
		frame.getContentPane().add(lblNewLabel_1);
		
		JButton btnHome = new JButton("Home");
		btnHome.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				switchpanel(panel);
			}
		});
		btnHome.setFont(new Font("Times New Roman", Font.BOLD, 15));
		btnHome.setBounds(1107, 33, 119, 31);
		frame.getContentPane().add(btnHome);
	}
	
	private void addinvoiceid() {
		Connection con;
		PreparedStatement ps;
		try{
			Class.forName("com.mysql.jdbc.Driver");
			con=DriverManager.getConnection("jdbc:mysql://localhost:3307/test","root","root");
			String str="select count(invoiceid) from invoice";
			ps=con.prepareStatement(str);
			ResultSet rs=ps.executeQuery();
			if(rs.next()){
				int in=rs.getInt(1)+1;
				invoice.setText(" "+in);
			}
			con.close();
		}
		catch(Exception es){}
		
	}

	public void addcomboBox_1(){
		Connection con;
		PreparedStatement ps;
		ResultSet rs;
		try{
			Class.forName("com.mysql.jdbc.Driver");
			con=DriverManager.getConnection("jdbc:mysql://localhost:3307/test","root","root");
			String str="select DISTINCT brandname from item";
			ps=con.prepareStatement(str);
			rs=ps.executeQuery();
			while(rs.next()){
				comboBox_1.addItem(rs.getString(1));
			}
			con.close();
		}
		catch(Exception es){
			JOptionPane.showMessageDialog(frame, es.toString());
		}
	}
	
	public void additembrand(String brand){
		Connection con;
		PreparedStatement ps;
		ResultSet rs;
		try{
			Class.forName("com.mysql.jdbc.Driver");
			con=DriverManager.getConnection("jdbc:mysql://localhost:3307/test","root","root");
			String str="select * from item where brandname=?";
			ps=con.prepareStatement(str);
			ps.setString(1, brand);
			rs=ps.executeQuery();
			while(rs.next()){
				comboBox.addItem(rs.getString(4));
			}		
			con.close();
		}
		catch(Exception es){}
	}
}
